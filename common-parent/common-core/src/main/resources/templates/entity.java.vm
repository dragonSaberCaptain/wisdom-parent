package ${package.Entity};

import com.baomidou.mybatisplus.annotation.*;
import ${cfg.superEntityClassPackage};

#if(${swagger2})
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
#end
#if(${entityLombokModel})
import lombok.Data;
import lombok.EqualsAndHashCode;
#if(${chainModel})
import lombok.experimental.Accessors;
#end
#end
#if(${cfg.useJpa})
import org.hibernate.annotations.Table;

import javax.persistence.Column;
import javax.persistence.Entity;
#end
/**
 * $!{table.comment} 实体类
 *
 * @author ${author}
 * @version ${cfg.version}
 */
#if(${entityLombokModel})
@Data
#if(${chainModel})
@Accessors(chain = true)
#end
#if(${superEntityClass})
@EqualsAndHashCode(callSuper = true)
#else
@EqualsAndHashCode(callSuper = false)
#end
#end
#if(${cfg.useJpa})
@Entity(name = "${table.name.toUpperCase()}")
@Table(appliesTo = "${table.name.toUpperCase()}", comment = "$!{table.comment}")
#end
#if(${swagger2})
@ApiModel(value = "${entity}对象", description = "$!{table.comment}")
#end
#if(${superEntityClass})
public class ${entity} extends ${superEntityClass}#if(${activeRecord})<${entity}>#end {
#elseif(${activeRecord})
public class ${entity} extends Model<${entity}> {
#else
public class ${entity} implements Serializable {
#end

#if(${entitySerialVersionUID})
    private static final long serialVersionUID = 1L;
#end
## ----------  BEGIN 字段循环遍历  ----------
#foreach($field in ${table.fields})

#if(${field.keyFlag})
#set($keyPropertyName=${field.propertyName})
#end
## 乐观锁注解
#if(${field.name.equalsIgnoreCase(${versionFieldName})})
    @Version
#end
## 逻辑删除注解
#if(${field.name.equalsIgnoreCase(${logicDeleteFieldName})})
    @TableLogic
#end
#if("$!field.comment" != "")
#if(${swagger2})
    @ApiModelProperty(value = "${field.comment}")
#else
    /**
     * ${field.comment}
     */
#end
#end
#if(${field.keyFlag})
## 主键
#if(${field.keyIdentityFlag})
    @TableId(value = "${field.annotationColumnName}", type = IdType.AUTO)
#elseif(!$null.isNull(${idType}) && "$!idType" != "")
    @TableId(value = "${field.annotationColumnName}", type = IdType.${idType})
#elseif(${field.convert})
    @TableId("${field.annotationColumnName}")
#end
## 普通字段
#elseif(${field.fill})
## -----   存在字段填充设置   -----
###if(${field.convert})
##    @TableField(value = "${field.annotationColumnName}", fill = FieldFill.${field.fill})
###else
##    @TableField(fill = FieldFill.${field.fill})
###end
###elseif(${field.convert})
##    @TableField("${field.annotationColumnName}")
#end
#if(${cfg.useJpa})
    @Column(columnDefinition = "${field.type} COMMENT '${field.comment}'")
#end
    private ${field.propertyType} ${field.propertyName};
#end
## ----------  END 字段循环遍历  ----------
#if(!${entityLombokModel})
#foreach($field in ${table.fields})
#if(${field.propertyType.equals("boolean")})
#set($getprefix="is")
#else
#set($getprefix="get")
#end

    public ${field.propertyType} ${getprefix}${field.capitalName}() {
        return ${field.propertyName};
    }

#if(${chainModel})
    public ${entity} set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
#else
    public void set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
#end
        this.${field.propertyName} = ${field.propertyName};
#if(${chainModel})
        return this;
#end
    }
#end
## --foreach end---
#end
## --end of #if(!${entityLombokModel})--
#if(${entityColumnConstant})
#foreach($field in ${table.fields})
    public static final String ${field.name.toUpperCase()} = "${field.name}";
#end
#end
#if(${activeRecord})
    @Override
    protected Serializable pkVal() {
#if(${keyPropertyName})
        return this.${keyPropertyName};
#else
        return null;
#end
    }
#end
#if(!${entityLombokModel})
    @Override
    public String toString() {
        return "${entity}{" +
#foreach($field in ${table.fields})
#if($!{foreach.index}==0)
                "${field.propertyName}=" + ${field.propertyName} +
#else
                ", ${field.propertyName}=" + ${field.propertyName} +
#end
#end
                "}";
    }
#end
}
